version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: clausewise_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: manishprakkash
      MONGO_INITDB_ROOT_PASSWORD: xV9Y03RpU5RBFS9k
      MONGO_INITDB_DATABASE: clausewise
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - clausewise_network

  redis-broker:
    image: redis:7-alpine
    container_name: clausewise_redis
    command: redis-server --appendonly yes --requirepass redis_secure_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - clausewise_network

  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clausewise_backend
    environment:
      MONGODB_URL: mongodb+srv://manishprakkash:xV9Y03RpU5RBFS9k@cluster0.skvvuc9.mongodb.net/clausewise?retryWrites=true&w=majority&appName=Cluster0
      REDIS_URL: redis://:redis_secure_password@redis-broker:6379/0
      SECRET_KEY: your-super-secret-jwt-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: production
    volumes:
      - ./backend:/app
      - document_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis-broker
    restart: unless-stopped
    networks:
      - clausewise_network

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clausewise_celery
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      MONGODB_URL: mongodb+srv://manishprakkash:xV9Y03RpU5RBFS9k@cluster0.skvvuc9.mongodb.net/clausewise?retryWrites=true&w=majority&appName=Cluster0
      REDIS_URL: redis://:redis_secure_password@redis-broker:6379/0
      SECRET_KEY: your-super-secret-jwt-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: production
    volumes:
      - ./backend:/app
      - document_uploads:/app/uploads
    depends_on:
      - mongodb
      - redis-broker
    restart: unless-stopped
    networks:
      - clausewise_network

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: clausewise_frontend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend-api
    restart: unless-stopped
    networks:
      - clausewise_network

volumes:
  mongodb_data:
  redis_data:
  document_uploads:

networks:
  clausewise_network:
    driver: bridge